continue
   LowNpidNotificationMailer.low_npid(site).deliver_later
exit
site["location_id"]
site[:location_id]
site
exit
 LowNpidNotificationMailer.low_npid(site).deliver_later
site
exit
LastSeenMailer.last_seen_more_than_3_days(site).deliver_later
site["last_seen"].to_datetime.strftime('%d %b, %Y %H:%M:%S')
site["last_seen"]
exit
continue
 LastSeenMailer.last_seen_more_than_3_days(site).deliver_later
exit
site
exit
 LastSeenMailer.last_seen_more_than_3_days(site).deliver_later
exit
continue
exit
exti
exit
  LastSyncedMailer.last_synced_more_than_3_days(site).deliver_now
  LastSyncedMailer.last_synced_more_than_3_days(site).deliver_later
exit
site["days_remaining"]
site[:days_remaining]
site[:site_name]
 site[:avg_consumption_rate_per_day] || 0
exit
MailingList.joins(:roles).where('roles.role = ?', 'Admin').pluck(:email)
 MailingList.joins(:roles).where('roles.role = ?', 'Admin').pluck(:email) 
 @mailing_list.blank? 
   @mailing_list = MailingList.joins(:mailer_locations).where(
            'mailer_locations.location_id = ?', 
            site_details["location_id"]).pluck(:email)
 @site_details["location_id"]
 @site_details["location_id']
 @site_details[:location_id]
 @site_details[:loaction_id]
 @site_details = site_details
site_details = site
site
   LastSyncedMailer.last_synced_more_than_3_days(site)
exit
site["location_id"]
site[:location_id]
site
exit
   LastSyncedMailer.last_synced_more_than_3_days(site)
exit
continue
 site['days_since_last_activity'].to_i > 3
  LastSyncedMailer.last_synced_more_than_3_days(site)
continue
exit
smtp_settings[:address]
smtp_settings[:port]
smtp_settings[:domain]
 smtp_settings[:user_name]
smtp_settings[:password]
smtp_settings[:authentication]
smtp_settings[:enable_starttls_auto]
smtp_settings[:smtp_enable_starttls_auto]
 smtp_settings[:address] 
 smtp_settings 
exit
smtp_settings[:port]
smtp_settings[:address]
smtp_settings = parsed_yaml[:smtp_settings][Rails.env.to_sym]
parsed_yaml = YAML.load(yaml_content).deep_symbolize_keys
YAML.load(yaml_content)[Rails.env]
 yaml_content
exit
Rails.env
  smtp_settings
exit
  smtp_settings
  debugger
exit
test = DashBoardService.site_activities
c
LowNpidNotificationJob.perform_later(params[:location_updated_at].to_i)
LowNpidNotificationJob.perform_later
LowNpidNotificationJob.perfom_later
params[:location_updated_at].to_i
params[:location_updated_at].to_id
params[:location_updated_at]
params
exit
site
site.symbolize_keys!
site
site.symbolize_keys
c
site
site.symbolize_keys!
site.symbolize_keys
site
exit
c
sites
c
test = EmailingService.check_network_and_sync(site_activity)
test = EmailingService.check_network_and_sync(site_activity)[:last_seen]
c
sites
c
sites.delete('last_seen')
sites
sites.delete('last_seen')
SendMailJob.perform_later({mailing_list: recepients, subject: subject, body: sites})
sites
c
sites
sites.map { |site| site['last_activity'] = site['last_activity'].strftime("%d-%m-%Y %H:%M")}
sites
sites.map { |site| site['date_last_updated'] = site['last_activity'].strftime("%d-%m-%Y %H:%M")}
sites.map { |site| site['date_last_updated'] = site['last_activity'].strftime("%d-%m-%Y %HH:%MM")}
sites.map { |site| site['date_last_updated'] = site['last_activity'].strftime("%D-%M-%Y %H:%M")}
sites
sites.map { |site| site['date_last_updated'] = site['last_activity'].strftime("%D-%M-%Y %H:%M")}
sites.map { |site| site['date_last_updated'] = site['date_last_updated'].strftime("%D-%M-%Y %H:%M")}
sites
exit
test[:last_sync]
test['last_sync']
test
test = EmailingService.check_network_and_sync(site_activity)
test
test = EmailingService.check_network_and_sync(site_activity)['last_seen']
c
sites
c
args[0][:body]
args
c
sites
c
low_npid_sites
sites
c
low_npid_sites
low_npid_sites.map { |site| site.delete('date_last_updated')}
low_npid_sites.map { |site| site.delete!('date_last_updated')}
low_npid_sites.map { |site.delete!('date_last_updated')}
low_npid_sites
c
args
c
