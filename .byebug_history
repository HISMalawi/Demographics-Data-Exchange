continue
exit 
person.birthdate.to_s
person.birthdate.strftime("%Y-%b-%D %T:%s %P")
person.birthdate.strftime("%Y-%B-%D %T:%s %P")
person.birthdate.strftime("%Y-%M-%D %T:%s %P")
person.birthdate.strftime("%Y-%D %d %T:%s %P")
person.birthdate.strftime("%Y, %B %d %T:%s %P")
person.birthdate.str
person.birthdate.strftime("%yy, %B %d %T:%s %P")
person.birthdate.strftime("%y, %B %d %T:%s %P")
person.birthdate.strftime("%a, %B %d %T:%s %P")
JSON.parse(person.birthdate)
person.birthdate.to_json
person.birthdate
gender
exit
gender
payload
continue
exit
"#{record.location_created_at}"
record.location_created_at
person.location_created_at
RestClient.post(url, format_payload(record), {content_type: :json, accept: :json})
exit
RestClient.post(url, format_payload(record), {content_type: :json, accept: :json})
RestClient.post(url, format_payload(record), {content_type: :json, accept: :json})[:message]
RestClient.post(url, format_payload(record), {content_type: :json, accept: :json}).message
exit
format_payload(record)
format_record(payload)
RestClient.post(url, format_payload(record), {content_type: :json, accept: :json})
response
url
record.birthdate.str
record.birthdate.to_string
record.birthdate.to_str
record.birthdate
record
exit
payload.to_json
payload
exit
payload
exit
payload
 person.gender == "M"
 person.gender == "m"
 person.gender == "M"
person.gender
person.birthdate_estimated
person.birthdate_estimate
person.birdate_estimate
person.location_created_at
person.home_village
person.home_district
exit
@master 
master
continue
exit
@master
c
records_to_push.first.id
records_to_push.first.update_seq
records_to_push.first
records.first
continue
